# Executive Assistant MVP - Development Docker Compose

version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - WS_PORT=8080
      - DEBUG=true
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/src:/app/src
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - executive-network

  frontend:
    build:
      context: ./frontend  
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
      - "5173:5173"
    environment:
      - NODE_ENV=development
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - executive-network

  # Development database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: executive_assistant_dev
      POSTGRES_USER: executive
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - executive-network

  # Development Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - executive-network

volumes:
  postgres_dev_data:

networks:
  executive-network:
    driver: bridge
